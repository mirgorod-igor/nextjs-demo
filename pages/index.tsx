import {GetServerSideProps, NextPage} from 'next'
import Head from 'next/head'


import {Price} from '@prisma/client'

import {NewItem, Input, Select, List, RemoveToggler} from '../components'


import {
	region, product, price,
	regionMap, productMap
} from '../stores'

import sty from '../styles/home.module.sass'
import {useEffect} from "react";



const NewRegion = () =>
	<NewItem name='region' store={region.edit}>
		<Input placeholder='название' edit={region.edit} fieldName='name' />
		<Input placeholder='код' edit={region.edit} fieldName='code' />
	</NewItem>



const NewProduct = () =>
	<NewItem name='product' store={product.edit}>
		<Input placeholder='название' edit={product.edit} fieldName='name' />
	</NewItem>




const NewPrice = () => {
	return <NewItem name='price' store={price.edit}>
		<Select edit={price.edit} list={region.list} fieldName='regionId' />
		<Select edit={price.edit} list={product.list} fieldName='productId' />
		<Input placeholder='название' edit={price.edit} fieldName='price' asNumber />
	</NewItem>
}




type Props = {
	/*regions: Region[]
	products: Product[]
	prices: Price[]*/
}


const PriceItem = (p: { item: Price }) => {

	return <RemoveToggler id={p.item.id} store={price.remove}>
		<span>{productMap[p.item.productId]}</span>
		<span>{p.item.price}</span>
	</RemoveToggler>
}

const PriceList = () => {
	const st = price.list.useStatus()

	const items = price.list.items.sort((it1, it2) =>
		it1.regionId > it2.regionId ? 1 : -1
	)


	const show = {}

	const region = (id: number) =>
		!show[id] && (
			show[id] = true, <b>{regionMap[id]}</b>
		)


	return !st ? <div className={sty.loading}>загрузка</div> : <div className={sty.prices}>
		{
			items.map(it => <>
				{region(it.regionId)}
				<PriceItem key={it.id} item={it} />
			</>)
		}
	</div>
}

const Toggler = (p: { num, title }) => <>
	<input type='radio' id={'toggler' + p.num} name='toggler' />
	<label htmlFor={'toggler' + p.num}>{p.title}</label>
</>

const Home: NextPage<Props> = p => {
	useEffect(() => {
		Promise.all([
			region.list.fetch(),
			product.list.fetch()
		]).then(() => price.list.fetch())
	}, [])

	return <>
		<Head>
			<title>Create Next App</title>
			<meta name="description" content="Generated by create next app"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<link rel="icon" href="/favicon.ico"/>
		</Head>

		<main className={sty.main}>
			<div className={sty.tabs}>
				{
					['Регионы', 'Продукты', 'Цены'].map((it, i) =>
						<Toggler key={i} num={i} title={it} />
					)
				}

				<div id='tab1'>
					<List store={region} />
					<hr />
					<NewRegion />
				</div>
				<div id='tab2'>
					<List store={product} />
					<hr />
					<NewProduct />
				</div>
				<div id='tab3'>
					<PriceList />
					<hr />
					<NewPrice />
				</div>
			</div>
		</main>
	</>
}


export default Home

export const getServerSideProps: GetServerSideProps<Props> = async () => {
	/*const prisma = new PrismaClient()
	const regions = await prisma.region.findMany()
		, products = await prisma.product.findMany()
		, prices = await prisma.price.findMany()*/
	//console.log(regions)
	return {
		props: {
			//regions, products, prices
		}
	}
}