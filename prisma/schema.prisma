generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Region {
  id     Int     @id
  name   String
  code   String
  prices Price[]
  orgs   Org[]

  @@map("regions")
}

model ProductCategory {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]

  @@map("product_categories")
}

model Product {
  id         Int     @id @default(autoincrement())
  categoryId Int?
  parentId   Int?
  name       String
  prices     Price[]

  category ProductCategory? @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  parent   Product?         @relation("ProductParent", fields: [parentId], references: [id], onDelete: Cascade)
  childs   Product[]        @relation("ProductParent")
  attrs    ProductAttr[]

  @@index([name])
  @@map("products")
}

model ProductAttr {
  id        Int    @id @default(autoincrement())
  productId Int
  parentId  Int?
  name      String
  value     String

  product Product       @relation(fields: [productId], references: [id], onDelete: Cascade)
  parent  ProductAttr?  @relation("ProductAttrParent", fields: [parentId], references: [id], onDelete: Cascade)
  childs  ProductAttr[] @relation("ProductAttrParent")

  @@map("product_attrs")
}

model Specialization {
  id   Int    @id @default(autoincrement())
  name String

  @@map("specializations")
}

model Society {
  id    Int    @id @default(autoincrement())
  name  String
  short String
  orgs  Org[]

  @@map("societies")
}

model Org {
  id        Int    @id @default(autoincrement())
  societyId Int
  name      String
  short     String
  trade     Trade  @default(w)
  regionId  Int
  legalAddr String
  parentId  Int?

  society Society @relation(fields: [societyId], references: [id], onDelete: Cascade)
  parent  Org?    @relation("OrgHead", fields: [parentId], references: [id])
  childs  Org[]   @relation("OrgHead")
  region  Region  @relation(fields: [regionId], references: [id], onDelete: Cascade)
  prices  Price[]

  @@map("orgs")
}

model Price {
  id        Int   @id @default(autoincrement())
  productId Int
  regionId  Int?
  orgId     Int?
  price     Float

  org     Org?    @relation(fields: [orgId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  region  Region? @relation(fields: [regionId], references: [id], onDelete: Cascade)

  @@unique([productId, regionId, orgId])
  @@map("prices")
}

enum Trade {
  w
  r
}
